name: 'Publish test code coverage badge'
description: 'Generate and upload test code coverage badge'
inputs:
  service-name:
    description: 'Name of the microservice'
    required: true
  coverage-report:
    description: 'Full path to test coverage output file'
    required: true
    default: '/tmp/coverage.out'
  bucket:
    description: 'Gcloud bucket to publish files'
    required: true
  code:
    description: 'Programming language to run tests for'
    required: true
    default: 'go'
runs:
  using: "composite"
  steps:
    - id: coverage-publisher
      run: |
        set -x

        if [ ${{ inputs.code }} == 'go' ] ; then
         total=`go tool cover -func=${{ inputs.coverage-report }} | grep total | grep -Eo '[0-9]+\.[0-9]+'`
        elif [ ${{ inputs.code }} == 'js' ]; then
         total=``
        else
         total=`0`
        fi

        if (( $(echo "$total <= 5x0" | bc -l) )) ; then
          COLOR=red
        elif (( $(echo "$total > 90" | bc -l) )); then
          COLOR=green
        else
          COLOR=orange
        fi

        service=${{ inputs.service-name }}
        curl "https://img.shields.io/badge/coverage-$total%25-$COLOR?label=$service" > ${{ inputs.service-name }}.svg
        curl "https://img.shields.io/badge/date-$(date)-blue" > ${{ inputs.service-name }}_date.svg

        gsutil  -h "Cache-Control: no-cache" cp ${{ inputs.service-name }}.svg gs://${{ inputs.bucket }}/${{ inputs.service-name }}.svg
        gsutil acl ch -u AllUsers:R gs://${{ inputs.bucket }}/${{ inputs.service-name }}.svg

        gsutil  -h "Cache-Control: no-cache" cp ${{ inputs.service-name }}_date.svg gs://${{ inputs.bucket }}/${{ inputs.service-name }}_date.svg
        gsutil acl ch -u AllUsers:R gs://${{ inputs.bucket }}/${{ inputs.service-name }}_date.svg
      shell: bash